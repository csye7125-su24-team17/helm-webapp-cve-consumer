---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flyway-script-1
  namespace: {{.Values.namespace}}
data:
  V1__init_schema.sql: |
    -- Create schema if it does not exist
    CREATE SCHEMA IF NOT EXISTS cve;

    CREATE TABLE cve.cve_records (
        id SERIAL PRIMARY KEY,
        cve_id VARCHAR(255),
        data JSONB,
        date_published TIMESTAMP,
        date_updated TIMESTAMP,
        version INT DEFAULT 1,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE (cve_id, version)
    );

    -- Create indexes for better performance on JSONB
    CREATE INDEX idx_cve_id ON cve.cve_records (cve_id);
    CREATE INDEX idx_date_updated ON cve.cve_records (date_updated);
    CREATE INDEX idx_json_data ON cve.cve_records USING gin (data);

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flyway-script-2
  namespace: {{.Values.namespace}}
data:
  V2__modify_tables.sql: |
    -- V2__modify_table.sql
    -- Add columns for additional metadata and version tracking
    ALTER TABLE cve.cve_records
    ADD COLUMN severity_scores VARCHAR(255);  -- Adds a column to store severity scores

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flyway-script-3
  namespace: {{.Values.namespace}}
data:
  V3__create_views.sql: |
    -- V3__create_views.sql
    -- Create or replace the view to fetch the latest version of each CVE record
    CREATE OR REPLACE VIEW cve.latest_cve_records AS
    SELECT *
    FROM cve.cve_records
    WHERE (cve_id, version) IN (
        SELECT cve_id, MAX(version)
        FROM cve.cve_records
        GROUP BY cve_id
    );

---